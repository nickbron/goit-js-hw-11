{"version":3,"sources":["promise_task3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","Promise","resolve","reject","delay","setTimeout","id","time","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";AACA,MAAMA,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAIhDK,EAAmBC,GAChB,IAAIC,QAAQ,CAACC,EAASC,KACrBC,MAAAA,EAAQX,EAA0B,IAAK,KAE7CY,WAAW,KACUT,KAAKE,SAAW,GAG7BI,EAAQ,CAAEI,GAAIN,EAAYM,GAAIC,KAAMH,IAEjCD,EAAOH,EAAYM,KAC3BF,KAIDI,EAAa,EAAGF,GAAAA,EAAIC,KAAAA,MACxBE,QAAQC,mBAAmBJ,kBAAmBC,QAG1CI,EAAWL,IACfG,QAAQG,qCAAqCN,+BAG/CP,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAChEZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ","file":"promise_task3.d572cdfd.js","sourceRoot":"../src","sourcesContent":["\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\n\nconst makeTransaction = (transaction) => {\n  return new Promise((resolve, reject) => {\n    const delay = randomIntegerFromInterval(200, 500);\n\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n\n        if (canProcess) {\n            resolve({ id: transaction.id, time: delay });\n        }\n        else { reject(transaction.id); }\n    }, delay);\n  });\n};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);"]}